{"version":3,"sources":["reportWebVitals.js","jsonGenerator.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","data","id","field","len","isSelected","dataType","JSONGeneratorComponent","useState","noOfObj","setNoOfObj","configObj","setConfigObj","output","setOutput","onFieldChange","oId","type","value","index","findIndex","i","dd","getRandomObj","arr","start","length","getRandomStr","result","characters","charactersLength","charAt","Math","floor","random","getRandomFloat","pow","toFixed","obj","j","Date","getTime","toISOString","generate","showDemo","selectedObjects","filter","push","console","log","myJson","JSON","stringify","x","window","open","document","write","close","style","marginBottom","className","width","background","color","display","justifyContent","fontSize","Grid","container","spacing","marginTop","item","xs","height","overflowY","overflowX","map","Checkbox","onChange","e","target","checked","Input","Select","labelId","MenuItem","onClick","_configObj","margin","marginLeft","displayDataTypes","name","src","App","step","setStep","textAlign","ReactDOM","render","StrictMode","getElementById"],"mappings":"uLAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8GCURQ,EAAO,CACT,CACIC,GAAI,EACJC,MAAO,OACPC,IAAK,GACLC,YAAY,EACZC,SAAU,UAEd,CACIJ,GAAI,EACJC,MAAO,WACPC,IAAK,EACLC,YAAY,EACZC,SAAU,UAEd,CACIJ,GAAI,EACJC,MAAO,MACPC,IAAK,GACLC,YAAY,EACZC,SAAU,WAEd,CACIJ,GAAI,EACJC,MAAO,UACPC,IAAK,EACLC,YAAY,EACZC,SAAU,SAEd,CACIJ,GAAI,EACJC,MAAO,YACPC,IAAK,EACLC,YAAY,EACZC,SAAU,SAILC,EAAyB,WAClC,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAASP,GAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAGMC,EAAgB,SAACC,EAAKC,EAAMC,GAC9B,IAAIC,EAAQR,EAAUS,WAAU,SAAAC,GAAC,OAAIA,EAAEnB,KAAOc,KAC1CM,EAAKX,EAAUQ,GACnBG,EAAGL,GAAQC,EACXP,EAAUQ,GAASG,EACnBV,EAAa,YAAID,KAGfY,EAAe,SAACC,GAyBlB,IAxBA,IAmBuBC,EANEC,EAbnBC,EAAe,SAACvB,GAIlB,IAHA,IAAIwB,EAAS,GACTC,EAAa,uDACbC,EAAmBD,EAAWH,OACzBL,EAAI,EAAGA,EAAIjB,EAAKiB,IACrBO,GAAUC,EAAWE,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,IAE3D,OAAOF,GASLO,EAAiB,SAACT,GACpB,OAAQM,KAAKI,IAAI,GAAIV,EAAS,GAAqB,EAAhBM,KAAKE,SAAeF,KAAKI,IAAI,GAAIV,EAAS,IAAIW,QAAQ,IAMzFC,EAAM,GACDC,EAAI,EAAGA,EAAIf,EAAIE,OAAQa,IACJ,YAApBf,EAAIe,GAAGjC,WACPgC,EAAId,EAAIe,GAAGpC,OAhBD6B,KAAKC,MAAsB,EAAhBD,KAAKE,UACb,IAAM,GAiBC,WAApBV,EAAIe,GAAGjC,WACPgC,EAAId,EAAIe,GAAGpC,OAASwB,EAAaH,EAAIe,GAAGnC,MAEpB,WAApBoB,EAAIe,GAAGjC,WACPgC,EAAId,EAAIe,GAAGpC,QAnBMuB,EAmBmBF,EAAIe,GAAGnC,IAlBxC4B,KAAKC,MAAMD,KAAKI,IAAI,GAAIV,EAAS,GAAqB,EAAhBM,KAAKE,SAAeF,KAAKI,IAAI,GAAIV,EAAS,MAoB/D,UAApBF,EAAIe,GAAGjC,WACPgC,EAAId,EAAIe,GAAGpC,OAASgC,EAAeX,EAAIe,GAAGnC,MAEtB,SAApBoB,EAAIe,GAAGjC,WACPgC,EAAId,EAAIe,GAAGpC,QAnBIsB,EAmBmB,IAAIe,KAAK,KAAM,EAAG,GAlBjD,IAAIA,KAAKf,EAAMgB,UAAYT,KAAKE,WAAY,IAAIM,MAAOC,UAAYhB,EAAMgB,aAkBpBC,eAGhE,OAAOJ,GAGLK,EAAW,SAACC,GAGd,IAFA,IAAIpB,EAAM,GACNqB,EAAkBlC,EAAUmC,QAAO,SAAAzB,GAAC,OAAIA,EAAEhB,YAAcgB,EAAElB,MAAMuB,OAAS,KACpEL,EAAI,EAAGA,EAAIZ,EAASY,IAAK,CAC9B,IAAIiB,EACJA,EAAMf,EAAasB,GACnBrB,EAAIuB,KAAKT,GAIb,GAFAU,QAAQC,IAAIzB,GACZV,EAAUU,EAAI,KACVoB,EAAU,CACV,IAAIM,EAASC,KAAKC,UAAU5B,EAAK,KAAM,GACnC6B,EAAIC,OAAOC,OACfF,EAAEG,SAASD,OACXF,EAAEG,SAASC,MAAM,oBAAsBP,EAAS,wBAChDG,EAAEG,SAASE,UAgBnB,OACI,gCACI,qBAAKC,MAAO,CAAEC,aAAc,IAA5B,SACI,wBAAQC,UAAW,MAAOF,MAAO,CAAEG,MAAO,IAAKC,WAAY,mDAAmDC,MAAM,QAApH,8BAGJ,sBAAKL,MAAO,CAAEM,QAAS,OAAQC,eAAgB,iBAA/C,UACI,gCACI,sBAAMP,MAAO,CAAEQ,SAAU,IAAzB,oBACA,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGX,MAAO,CAAEY,UAAW,IAAhD,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,sBACA,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,mBACA,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,oBACA,cAACL,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,qBAEJ,sBAAKd,MAAO,CAAEe,OAAQ,OAAQC,UAAW,OAAQC,UAAW,UAA5D,UAEQjE,EAAUkE,KAAI,SAACL,EAAMrD,GACjB,OACI,eAACiD,EAAA,EAAD,CAAkBC,WAAS,EAACC,QAAS,EAArC,UACI,cAACF,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SAAkB,cAACK,EAAA,EAAD,CACdC,SAAU,SAACC,GAAD,OAAOjE,EAAcyD,EAAKtE,GAAI,aAAc8E,EAAEC,OAAOC,UAC/DA,QAASV,EAAKnE,eAClB,cAAC+D,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SAAkB,cAACU,EAAA,EAAD,CACdJ,SAAU,SAACC,GAAD,OAAOjE,EAAcyD,EAAKtE,GAAI,QAAS8E,EAAEC,OAAO/D,QAC1DA,MAAOsD,EAAKrE,UAChB,cAACiE,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SAE2B,YAAlBD,EAAKlE,UAA4C,SAAlBkE,EAAKlE,UACrC,cAAC6E,EAAA,EAAD,CAAOjE,MAAOsD,EAAKpE,IACf2E,SAAU,SAACC,GAAD,OAAOjE,EAAcyD,EAAKtE,GAAI,MAAO8E,EAAEC,OAAO/D,YAGpE,cAACkD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,eAACW,EAAA,EAAD,CACIC,QAAQ,2BACRnF,GAAG,qBACHgB,MAAOsD,EAAKlE,SACZyE,SAAU,SAACC,GAAD,OACNjE,EAAcyD,EAAKtE,GAAI,WAAY8E,EAAEC,OAAO/D,QALpD,UAOI,cAACoE,EAAA,EAAD,CAAUpE,MAAO,SAAjB,oBACA,cAACoE,EAAA,EAAD,CAAUpE,MAAO,SAAjB,qBACA,cAACoE,EAAA,EAAD,CAAUpE,MAAO,UAAjB,qBACA,cAACoE,EAAA,EAAD,CAAUpE,MAAO,QAAjB,mBACA,cAACoE,EAAA,EAAD,CAAUpE,MAAO,OAAjB,yBA1BDC,MAiCvB,cAACiD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGX,MAAO,CAAEY,UAAW,IAAhD,SACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGc,QAjE3B,WACX,IAAIC,EAAa7E,EACjB6E,EAAWzC,KAAK,CACZ7C,GAAIS,EAAUe,OAAS,EACvBvB,MAAOQ,EAAU,GAAGR,MAAQ,KAC5BC,IAAK,EACLC,YAAY,EACZC,SAAU,WAEdM,EAAa,YAAI4E,KAwDG,SAAmC,cAAC,IAAD,cAI/C,qBAAK7B,MAAO,CAAEe,OAAQ,OAAQZ,MAAO,EAAGC,WAAY,QAAS0B,OAAQ,MAGrE,gCACI,sBAAM9B,MAAO,CAAEQ,SAAU,IAAzB,oBACA,sBAAKR,MAAO,CAAEY,UAAW,IAAzB,UACI,wDACA,cAACY,EAAA,EAAD,CAAOxB,MAAO,CAAEG,MAAO,GAAI4B,WAAY,IAAMxE,MAAOT,EAChDsE,SAAU,SAAAC,GAAC,OAAIA,EAAEC,OAAO/D,MAAQ,IAAMR,EAAWsE,EAAEC,OAAO/D,OAAS,MACvE,gDAEJ,qBAAKyC,MAAO,CAAEY,UAAW,IAAzB,SACI,wBAAQV,UAAW,MAAOF,MAAO,CAAEG,MAAO,KAAOyB,QAAS,kBAAI5C,GAAS,IAAvE,yBAGJ,qBAAKgB,MAAO,CAAEY,UAAW,IAAzB,SACI,wBAAQV,UAAW,MAAOF,MAAO,CAAEG,MAAO,KAAOyB,QAAS,kBAAI5C,GAAS,IAAvE,2BAQR,qBAAKgB,MAAO,CAAEe,OAAQ,OAAQZ,MAAO,EAAGC,WAAY,QAAS0B,OAAQ,MAErE,gCACI,sBAAM9B,MAAO,CAAEQ,SAAU,IAAzB,kEACA,qBAAKR,MAAO,CAAEY,UAAW,IAAzB,SACI,cAAC,IAAD,CAAWoB,kBAAkB,EAAOC,KAAI,UAAaC,IAAKhF,gBCvMnEiF,EA5BH,WACR,MAAwBtF,mBAAS,GAAjC,mBAAOuF,EAAP,KAAaC,EAAb,KACA,OACI,sBAAKrC,MAAO,CAACsC,UAAW,UAAxB,UAEiB,IAATF,GACA,8BACI,wBAAQR,QAAS,kBAAMS,EAAQ,IAAInC,UAAW,MAAOF,MAAO,CAACG,MAAO,KAApE,kDAYK,IAATiC,GACA,cAAC,EAAD,QCnBhBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5C,SAAS6C,eAAe,SAM1B7G,M","file":"static/js/main.509d4ca4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\r\nimport \"./App.scss\"\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport ReactJson from 'react-json-view'\r\n\r\nconst dataTypes = [\r\n    'string',\r\n    'float',\r\n    'number',\r\n    'boolean',\r\n    'date',\r\n]\r\nconst data = [\r\n    {\r\n        id: 1,\r\n        field: 'name',\r\n        len: 10,\r\n        isSelected: true,\r\n        dataType: 'string',\r\n    },\r\n    {\r\n        id: 2,\r\n        field: 'calories',\r\n        len: 3,\r\n        isSelected: true,\r\n        dataType: 'number',\r\n    },\r\n    {\r\n        id: 3,\r\n        field: 'job',\r\n        len: 12,\r\n        isSelected: true,\r\n        dataType: 'boolean',\r\n    },\r\n    {\r\n        id: 4,\r\n        field: 'protein',\r\n        len: 4,\r\n        isSelected: true,\r\n        dataType: 'float',\r\n    },\r\n    {\r\n        id: 5,\r\n        field: 'createdAt',\r\n        len: 4,\r\n        isSelected: true,\r\n        dataType: 'date',\r\n    },\r\n]\r\n\r\nexport const JSONGeneratorComponent = () => {\r\n    const [noOfObj, setNoOfObj] = useState(10)\r\n    const [configObj, setConfigObj] = useState(data)\r\n    const [output, setOutput] = useState([]);\r\n\r\n\r\n    const onFieldChange = (oId, type, value) => {\r\n        let index = configObj.findIndex(i => i.id === oId)\r\n        let dd = configObj[index];\r\n        dd[type] = value;\r\n        configObj[index] = dd;\r\n        setConfigObj([...configObj]);\r\n    }\r\n\r\n    const getRandomObj = (arr) => {\r\n        const getRandomStr = (len) => {\r\n            let result = '';\r\n            let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\r\n            let charactersLength = characters.length;\r\n            for (let i = 0; i < len; i++) {\r\n                result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n            }\r\n            return result;\r\n        }\r\n        const getRandomBoolean = () => {\r\n            let randNum = Math.floor(Math.random() * 4)\r\n            return randNum % 2 === 0;\r\n        }\r\n        const getRandomNumber = (length) => {\r\n            return Math.floor(Math.pow(10, length - 1) + Math.random() * 9 * Math.pow(10, length - 1));\r\n        }\r\n        const getRandomFloat = (length) => {\r\n            return (Math.pow(10, length - 1) + Math.random() * 9 * Math.pow(10, length - 1)).toFixed(2);\r\n        }\r\n        const getRandomDate = (start) => {\r\n            return new Date(start.getTime() + Math.random() * (new Date().getTime() - start.getTime()));\r\n        }\r\n\r\n        let obj = {};\r\n        for (let j = 0; j < arr.length; j++) {\r\n            if (arr[j].dataType === 'boolean') {\r\n                obj[arr[j].field] = getRandomBoolean();\r\n            }\r\n            if (arr[j].dataType === 'string') {\r\n                obj[arr[j].field] = getRandomStr(arr[j].len);\r\n            }\r\n            if (arr[j].dataType === 'number') {\r\n                obj[arr[j].field] = getRandomNumber(arr[j].len);\r\n            }\r\n            if (arr[j].dataType === 'float') {\r\n                obj[arr[j].field] = getRandomFloat(arr[j].len);\r\n            }\r\n            if (arr[j].dataType === 'date') {\r\n                obj[arr[j].field] = getRandomDate(new Date(2010, 0, 1)).toISOString();\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    const generate = (showDemo) => {\r\n        let arr = [];\r\n        let selectedObjects = configObj.filter(i => i.isSelected && i.field.length > 0)\r\n        for (let i = 0; i < noOfObj; i++) {\r\n            let obj;\r\n            obj = getRandomObj(selectedObjects)\r\n            arr.push(obj)\r\n        }\r\n        console.log(arr);\r\n        setOutput(arr[0]);\r\n        if(!showDemo) {\r\n            let myJson = JSON.stringify(arr, null, 2);\r\n            let x = window.open();\r\n            x.document.open();\r\n            x.document.write('<html><body><pre>' + myJson + '</pre></body></html>');\r\n            x.document.close();\r\n        }\r\n    }\r\n\r\n    const addNew = () => {\r\n        let _configObj = configObj;\r\n        _configObj.push({\r\n            id: configObj.length + 1,\r\n            field: configObj[0].field + '_1',\r\n            len: 4,\r\n            isSelected: true,\r\n            dataType: 'string',\r\n        })\r\n        setConfigObj([..._configObj]);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ marginBottom: 50, }}>\r\n                <button className={'btn'} style={{ width: 200, background: 'linear-gradient(326deg, #a4508b 0%, #5f0a87 74%)',color:'#fff' }}>JSON Generator\r\n                </button>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <div>\r\n                    <span style={{ fontSize: 22 }}>Step 1</span>\r\n                    <Grid container spacing={2} style={{ marginTop: 20 }}>\r\n                        <Grid item xs={2}>Selected</Grid>\r\n                        <Grid item xs={4}>Field</Grid>\r\n                        <Grid item xs={2}>Length</Grid>\r\n                        <Grid item xs={4}>Type</Grid>\r\n                    </Grid>\r\n                    <div style={{ height: '50vh', overflowY: 'auto', overflowX: 'hidden' }}>\r\n                        {\r\n                            configObj.map((item, index) => {\r\n                                return (\r\n                                    <Grid key={index} container spacing={2}>\r\n                                        <Grid item xs={2}><Checkbox\r\n                                            onChange={(e) => onFieldChange(item.id, 'isSelected', e.target.checked)}\r\n                                            checked={item.isSelected} /></Grid>\r\n                                        <Grid item xs={4}><Input\r\n                                            onChange={(e) => onFieldChange(item.id, 'field', e.target.value)}\r\n                                            value={item.field} /></Grid>\r\n                                        <Grid item xs={2}>\r\n                                            {\r\n                                                (item.dataType !== 'boolean' && item.dataType !== 'date') &&\r\n                                                <Input value={item.len}\r\n                                                    onChange={(e) => onFieldChange(item.id, 'len', e.target.value)} />\r\n                                            }\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                value={item.dataType}\r\n                                                onChange={(e) =>\r\n                                                    onFieldChange(item.id, 'dataType', e.target.value)}\r\n                                            >\r\n                                                <MenuItem value={'string'}>String</MenuItem>\r\n                                                <MenuItem value={'number'}>Integer</MenuItem>\r\n                                                <MenuItem value={'boolean'}>Boolean</MenuItem>\r\n                                                <MenuItem value={'float'}>Float</MenuItem>\r\n                                                <MenuItem value={'date'}>Date</MenuItem>\r\n                                            </Select>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                )\r\n                            })\r\n                        }\r\n                        <Grid container spacing={2} style={{ marginTop: 20 }}>\r\n                            <Grid item xs={2} onClick={addNew}><AddCircleOutlineIcon /></Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </div>\r\n                <div style={{ height: '55vh', width: 2, background: 'white', margin: 20 }}>\r\n\r\n                </div>\r\n                <div>\r\n                    <span style={{ fontSize: 22 }}>Step 2</span>\r\n                    <div style={{ marginTop: 20, }}>\r\n                        <span>No of Object in JSON</span>\r\n                        <Input style={{ width: 35, marginLeft: 25 }} value={noOfObj}\r\n                            onChange={e => e.target.value < 501 ? setNoOfObj(e.target.value) : {}} />\r\n                        <span>(max 500)</span>\r\n                    </div>\r\n                    <div style={{ marginTop: 20 }}>\r\n                        <button className={'btn'} style={{ width: 200 }} onClick={()=>generate(true)}>Show Demo\r\n                        </button>\r\n                    </div>\r\n                    <div style={{ marginTop: 20 }}>\r\n                        <button className={'btn'} style={{ width: 200 }} onClick={()=>generate(false)}>Generate\r\n                        </button>\r\n                    </div>\r\n                    {/* <div style={{ marginTop: 20 }}>\r\n                        <button className={'btn'} style={{ width: 200 }} onClick={() => generate(true)}>Generate & Download\r\n                        </button>\r\n                    </div> */}\r\n                </div>\r\n                <div style={{ height: '55vh', width: 2, background: 'white', margin: 20 }}>\r\n                </div>\r\n                <div>\r\n                    <span style={{ fontSize: 22 }}>Output (click on Show demo to see your first object)</span>\r\n                    <div style={{ marginTop: 20, }}>\r\n                        <ReactJson displayDataTypes={false} name={`Object1`} src={output} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from \"react\";\r\nimport \"./App.scss\"\r\nimport {JSONGeneratorComponent} from \"./jsonGenerator\";\r\n\r\nconst App = () => {\r\n    const [step, setStep] = useState(0)\r\n    return (\r\n        <div style={{textAlign: 'center'}}>\r\n            {\r\n                step === 0 &&\r\n                <div>\r\n                    <button onClick={() => setStep(1)} className={'btn'} style={{width: 450}}> Generate JSON for your\r\n                        Components\r\n                    </button>\r\n                    {/*<div>*/}\r\n                    {/*    <button className={'btn'} style={{width: 200}}>How It Works</button>*/}\r\n                    {/*</div>*/}\r\n                    {/*<div>*/}\r\n                    {/*    <button className={'btn'} style={{width: 200}}>Try Now</button>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n            }\r\n            {\r\n                step === 1 &&\r\n                <JSONGeneratorComponent/>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}